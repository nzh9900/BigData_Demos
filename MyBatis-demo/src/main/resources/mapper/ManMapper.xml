<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ni.mybatisdemo.mapper.ManMapper">
    <sql id="basicSql">
        id,name,age,telephone
    </sql>
    <select id="selectAll" resultType="com.ni.mybatisdemo.entity.Man">
        select
        <include refid="basicSql"/>
        from man
    </select>

    <insert id="insert">
        insert into man (name,age,telephone) values(#{name},#{age},#{telephone})
    </insert>

    <insert id="insertBatch">
        insert into man (name,age,telephone) values
        <foreach collection="men" item="man" separator=",">
            (#{man.name},#{man.age},#{man.telephone})
        </foreach>
    </insert>

    <update id="update">
        update man set name=#{name},age=#{age},telephone=#{telephone} where id=#{id}
    </update>

    <delete id="delete">
        delete from man where id = #{id}
    </delete>

    <select id="getManById" resultType="com.ni.mybatisdemo.entity.Man">
        select * from man where id = #{id}
    </select>

    <select id="selectAllAsMap" resultType="java.util.Map">
        select * from man
    </select>

    <!--
        1、if标签中的test属性是必须的
        2、if标签中test属性的值是false或者是true
        3、如果为true，则if标签中的sql语句就会拼接。反之就不会拼接
        4、test属性中可以使用的是：
            当使用了@Param注解，那么test中要出现的是@Param注解指定的参数名。
            当没有使用@Param注解，那么test中要出现的是：param1 param2 param3 ...
            当使用了POJO，那么test中出现的是POJO类的属性名
        5、在MyBatis的动态SQL中，不能使用&&，使用的是and
        6、标签内与#{}内写的都是POJO属性名，其余是SQL的字段名
        7、注意：这里我在yml文件配置了MyBatis的自动驼峰命名规范，所以不用使用as重新命名
		8、这个1 = 1是防止后面出现空传值导致SQL语句出现错误
		-->
    <select id="searchListWithIfCondition" resultType="com.ni.mybatisdemo.entity.Man">
        <bind name="telephonePattern" value="telephoneSearchVal+'%'"/>
        select * from man where 1=1
        <if test="nameSearchVal!=null and nameSearchVal!= ''">
            and name like #{nameSearchVal}"%"
        </if>
        <if test="telephoneSearchVal!=null and telephoneSearchVal!= ''">
            and telephone like #{telephonePattern}
        </if>
    </select>

    <!--
    where标签是专门负责where子句动态生成的
    这里将1 = 1去掉了并且第一个if标签语句还有"and"关键字 但丝毫不影响SQL查询语句
    但要注意：不能在语句后面加"and"比如：and brand like "%"#{brand}"%" and
    -->
    <select id="searchListWithWhereCondition" resultType="com.ni.mybatisdemo.entity.Man">
        <bind name="telephonePattern" value="telephoneSearchVal+'%'"/>
        select * from man
        <where>
            <if test="nameSearchVal!=null and nameSearchVal!= ''">
                name like #{nameSearchVal}"%"
            </if>
            <if test="telephoneSearchVal!=null and telephoneSearchVal!= ''">
                and telephone like #{telephonePattern}
            </if>
        </where>
    </select>

    <!--choose 相当于if ... else if ... else if ... else ... -->
    <select id="searchListWithChoose" resultType="com.ni.mybatisdemo.entity.Man">
        <bind name="pattern" value="telephoneSearchVal+'%'"/>
        select * from man
        <where>
            <choose>
                <when test="nameSearchVal!=null and nameSearchVal!= ''">
                    name like #{nameSearchVal}"%"
                </when>
                <when test="telephoneSearchVal!=null and telephoneSearchVal!= ''">
                    telephone like #{telephonePattern}
                </when>
                <otherwise>
                    name = 'admin'
                </otherwise>
            </choose>
        </where>
    </select>


    <!--
        foreach标签的属性：
            collection：指定数组或者集合
            item：代表数组或集合中的元素
            separator：循环之间的分隔符
            open：在标签先添加的符号
            close：在标签后添加的符号
    -->
    <select id="searchListWithForeach" resultType="com.ni.mybatisdemo.entity.Man">
        select * from man where name in
        <foreach collection="names" separator="," open="(" close=")" item="name">
            #{name}
        </foreach>
    </select>

    <resultMap id="manResultMap" type="com.ni.mybatisdemo.entity.Man">
        <id property="id" column="id"/>
        <result property="age" column="age"/>
        <result property="name" column="name"/>
        <result property="telephone" column="telephone"/>
        <association property="myClazz" javaType="com.ni.mybatisdemo.entity.Clazz">
            <id property="id" column="class_id"/>
            <result property="name" column="name"/>
            <result property="numberOfPeople" column="number_of_people"/>
        </association>
    </resultMap>

    <select id="selectDetailById" resultMap="manResultMap">
        select t1.id,
               t1.name,
               t1.age,
               t1.telephone,
               t2.id               as class_id,
               t2.name             as class_name,
               t2.number_of_people as number_of_people
        from man as t1
                 left join class as t2 on t1.class_id = t2.id
        where t1.id = #{id}
    </select>

    <resultMap id="orderResultMap" type="com.ni.mybatisdemo.entity.ManWithOrder" extends="manResultMap">
        <collection property="orders" ofType="com.ni.mybatisdemo.entity.Order">
            <id property="id" column="order_id"/>
            <result property="goodsName" column="goods_name"/>
            <result property="price" column="price"/>
            <result property="quantity" column="quantity"/>
        </collection>
    </resultMap>
    <select id="selectOrderDetailsById" resultMap="orderResultMap">
        select t1.id,
               t1.name,
               t1.age,
               t1.telephone,
               t2.id               as class_id,
               t2.name             as class_name,
               t2.number_of_people as number_of_people,
               t3.id               as order_id,
               t3.goods_name       as goods_name,
               t3.price            as price,
               t3.quantity         as quantity
        from man as t1
                 left join class as t2 on t1.class_id = t2.id
                 left join `order` as t3 on t1.id = t3.user_id
        where t1.id = #{id}
    </select>


</mapper>
